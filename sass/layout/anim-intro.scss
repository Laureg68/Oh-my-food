


$cd-bars: #15DEA5;
$cd-bars-inv: #0E397F;
$size: 16px;
$num-bars: 5;
$anim-dur: 1000ms;
$anim-delay: calc($anim-dur / $num-bars); /*$anim-dur / $num-bars; deprecated */

@keyframes anim {
    0% {
        scaleY: 100%;
    }
    50% {
        opacity: 90%;
    }
    99% {
        opacity: 90%;
        scaleY: 100%;
        
    }
    100% {
        opacity: 0%;
        scaleY: 0%;
        z-index: -10;
    }
}
@keyframes bars {
    0% {
        transform: scaleY(0.5);
    }
    100% {
        transform: scaleY(1.0);
    }
}
.anim-intro {
    transform-origin: 0% 0%;
    position: absolute; 
    top: 0px; 
    padding-top: 204px;
    z-index: 10; 
    background-color: rgba(255, 255, 255);
    opacity: 1;
    width: 100%; 
    height: 100%;
    scaleY: 100%;
    animation: anim 10000ms ease-out forwards;
    .load {
        margin: auto;        
        width: 120px;
        }
    }


.load {
    width: $size*10;
    height: $size*7.5;
    display: flex;
    justify-content: space-between;
    &__bar {
        background-color: $cd-bars;
        height: 100%;
        width: $size; 
        animation: bars $anim-dur backwards infinite ease-in-out alternate;
        /*timing-function: ease-in-out;*/
        /*animation-direction: alternate; (>>> normal reverse alternate) */
        @for $i from 1 through $num-bars {
            &--#{$i} {
                animation-delay: $anim-delay * $i;
            }
            &--#{$i}-inv {
                animation-delay: $anim-delay *$i;
                animation-direction: alternate-reverse; 
                background-color: $cd-bars-inv;
            }
            &--#{$i}-vart {
                animation-delay: $anim-delay * $i + random(100) * 15ms;
                animation-direction: alternate-reverse; 
                /*animation-fill-mode: forwards;*/
                background-color: $cd-bars-inv;
                &:hover {
                    animation-play-state: paused;
                }
            }
        }
    }
}
